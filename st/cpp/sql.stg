sql_class_header(manifest, date, filename, sql_func_decls) ::= <<
// <manifest>
// @date <date>

#include "define.h"

namespace Json {
class Value;
}

class GameSQL
{
public:
    <sql_func_decls:{x|<x>}; separator="\n\n">
};

/// <filename> ends here

>>

sql_func_decl(doc, func_name, args) ::= <<
// <doc>
static int <func_name>(<sql_func_args(args)>);
>>

sql_func_args(args) ::= <<
<if(args)><args:{x|<x>}; wrap, anchor, separator=", "><endif>
>>

sql_class_define(manifest, date, header_file, filename, sql_func_defines) ::= <<
// <manifest>
// @date <date>

#include "<header_file>"
#include "json/json.h"

<sql_func_defines:{x|<x>}; separator="\n\n">

// <filename> ends here
>>

sql_func_define(func_name, args, fmt_str, fmt_arg_list) ::= <<
int GameSQL::<func_name>(<sql_func_args(args)>)
{
    return SNPRINTF(__dest, __n, "\
<fmt_str:{x|<x>}; separator=" \\\n">"<if(fmt_arg_list)>,
<fmt_arg_list:{x|<x>}; wrap, anchor, separator=",\n"><endif>
                   );
}
>>
