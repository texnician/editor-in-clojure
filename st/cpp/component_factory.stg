component_factory_header(guard, date, factory_decls) ::= <<
// Automatically generated by happy world editor, DO NOT edit by hand.
// @date: <date>

#ifndef <guard>
#define <guard>

<includes>

<delcares>

<factory_decls: separator="\n">

#endif // <guard>
>>

includes() ::= <<
#include \<memory\>
#include "icomponentfactory.h"
>>

delcares() ::= <<
class TiXmlElement;
>>

smart_ptr(class) ::= "std::auto_ptr\<class\>"

component_factory_cpp(date, component_factory_defines) ::= <<
// Automatically generated by happy world editor, DO NOT edit by hand.
// @date: <date>

#include "tinyxml.h"
#include "factory_exception.h"
#include "component_factory.h"

<component_factory_defines: separator="\n">
>>

component_factory_decl(factory_name) ::= <<
class <factory_name> : public IComponentFactory
{
protect:
    virtual <smart_ptr("IComponent")> DoCreateFromXML(const TiXmlElement* data);
};
>>

component_factory_define(raw_name, class_name, factory_name) ::= <<
<smart_ptr("IComponent") <factory_name>::DoCreateFromXML(const TiXmlElement* data)
{
    <smart_ptr(class_name)> p(new <class_name>);
    
    const TiXmlElement *component_node = NULL;
    
    <find_component_node>

    if (component_node != NULL) {
        <build_attributes>
    }
    else
        throw ComponentNodeNotFound(<class_name>, __FILE__, __LINE__);
}
>>
