test_factory_file(manifest, date, comp_includes, comp_tests) ::= <<
#include <memory>
#include "gtest/gtest.h"
#include "gmock/gmock.h"
<comp_includes>

class ComponentFactoryTest : public ::testing::Test {
protected:
    virtual void SetUp()
        {}

    virtual void TearDown()
        {}
};

<comp_tests>

>>

comp_tests(comp_names, factory_names, xml_strings, attr_test_groups) ::= "<comp_names, factory_names, xml_strings, attr_test_groups:{c, f, x, a|<comp_test(c, f, x, a)>}; separation=\"\n\">"

comp_test(comp_name, factory_name, xml_string, attr_test_group) ::= <<
TEST_F(ComponentFactoryTest, <comp_name>)
{
    std::auto_ptr\<TiXmlElement> data(new TiXmlElement(<xml_string>));

    <factory_name> factory;
    std::auto_ptr\<<comp_name>> p((<comp_name>*)(factory.CreateFromXML(data.get()).release()));
    ASSERT_EQ(p->Sid(), sid("<comp_name>"));
    ASSERT_STREQ(p->Name(), "<comp_name>");

    <attr_tests>
}
>>

attr_test_group()
{
}
